{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addToSelect","good","setState","prevState","clearSelect","removeFromSelect","selectedItem","filter","renderSelectedGoods","length","slice","join","this","className","map","includes","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIhDG,YAAc,WACZ,EAAKF,SACH,CAAEH,cAAe,M,EAIrBM,iBAAmB,SAACC,GAClB,EAAKJ,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAeI,EAAUJ,cAAcQ,QAAO,SAAAN,GAAI,OAAIA,IAASK,U,EAInEE,oBAAsB,WACpB,IAAQT,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcU,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUV,EAAc,GAAxB,gBAEF,QACE,MAAM,GAAN,OAAUA,EAAcW,MAAM,GAAI,GAAGC,KAAK,MAA1C,2BACQZ,EAAcW,OAAO,GAD7B,mB,4CAKN,WAAU,IAAD,OACCX,EAAkBa,KAAKd,MAAvBC,cAER,OACE,sBAAKc,UAAU,MAAf,UAEE,oBAAIA,UAAU,QAAd,SAAuBD,KAAKJ,wBAE5B,oBAAIK,UAAU,QAAd,SACGjB,EAAgBkB,KAAI,SAACb,GACpB,OACE,qBAEEY,UAAS,sBAAiBd,EAAcgB,SAASd,GAC7C,sBACA,IAJN,UAMGA,EACD,wBACEe,KAAK,SACLH,UAAU,SACVI,QACElB,EAAcgB,SAASd,GACnB,kBAAM,EAAKI,iBAAiBJ,IAC5B,kBAAM,EAAKD,YAAYC,IAN/B,SASGF,EAAcgB,SAASd,GAAQ,SAAW,UAfxCA,QAsBZF,EAAcU,OAAS,GACtB,wBACEO,KAAK,SACLC,QAASL,KAAKR,YAFhB,yC,GA1EQc,IAAMC,WAuFTtB,ICxGfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c950e049.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[]\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  addToSelect = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, good],\n    }));\n  };\n\n  clearSelect = () => {\n    this.setState(\n      { selectedGoods: [] },\n    );\n  };\n\n  removeFromSelect = (selectedItem: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods.filter(good => good !== selectedItem),\n    }));\n  };\n\n  renderSelectedGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')}\n          and ${selectedGoods.slice(-1)} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        <h1 className=\"title\">{this.renderSelectedGoods()}</h1>\n\n        <ul className=\"goods\">\n          {goodsFromServer.map((good) => {\n            return (\n              <li\n                key={good}\n                className={`goods__item ${selectedGoods.includes(good)\n                  ? 'goods__item--active'\n                  : ''}`}\n              >\n                {good}\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={\n                    selectedGoods.includes(good)\n                      ? () => this.removeFromSelect(good)\n                      : () => this.addToSelect(good)\n                  }\n                >\n                  {selectedGoods.includes(good) ? 'Remove' : 'Add'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n\n        {selectedGoods.length > 0 && (\n          <button\n            type=\"button\"\n            onClick={this.clearSelect}\n          >\n            Clear Selected Items\n          </button>\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}